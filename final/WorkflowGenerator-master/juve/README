This is a synthetic workflow generator written in Python.

The subdirectories are:

    generator       A library for writing synthetic DAX generators
    ramakrishnan    Synthetic DAX generators for workflows from [1]
    yu              Synthetic DAX generators for workflows from [2]
    rahman          Synthetic DAX generators for workflows from [3]
    nadeem          Synthetic DAX generators for workflows from [5]
    synthetic       Random synthetic workflows

Sample workflows generated using this code can be found at:

    https://confluence.pegasus.isi.edu/display/pegasus/WorkflowGenerator

That page also contains a few synthetic Pegasus workflows from [4].


[1] L. Ramakrishnan and D. Gannon, "A Survey of Distributed Workflow 
    Characteristics and Resource Requirements", University of Indiana 
    Technical Report TR671, 2008.

[2] J. Yu, R. Buyya, and C. K. Tham, "Cost-based Scheduling of Scientific
    Workflow Applications on Utility Grids", Proceedings of the 1st 
    International Conference on e-Science and Grid Computing, 2005.
    
[3] M. Rahman, S. Venugopal, and R. Buyya, "A Dynamic Critical Path 
    Algorithm for Scheduling Scientific Workflow Applications on Global 
    Grids,” 3rd IEEE International Conference on e-Science and Grid 
    Computing, 2007.

[4] S. Bharathi, A. Chervenak, E. Deelman, G. Mehta, M.-H. Su, and 
    K. Vahi, “Characterization of Scientific Workflows”, 3rd Workshop 
    on Workflows in Support of Large Scale Science (WORKS 08), 2008.

[5] Farrukh Nadeem, Thomas Fahringer, "Using Templates to Predict 
    Execution Time of Scientific Workflow Applications in the Grid", 
    9th IEEE/ACM International Symposium on Cluster Computing and 
    the Grid, 2009.
